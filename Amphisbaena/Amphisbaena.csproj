<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>Amphisbaena.snk</AssemblyOriginatorKeyFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Description>System.Threading.Channels extensions</Description>
    <RepositoryUrl>https://github.com/Dmitry-Bychenko/Amphisbaena</RepositoryUrl>
    <RepositoryType>Library</RepositoryType>
    <Authors>Dmitry Bychenko</Authors>
    <Product />
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReleaseNotes>This .Net 5 library is LINQ to ChannelReader (System.Threading.Channels.ChannelReader). Unlike standard LINQ to Objects (which is an extension over IEnumerable&lt;T&gt;) this implementation is not lazy but eager and asynchronous.</PackageReleaseNotes>
    <Copyright>Copyright (c) 2021 Dmitry Bychenko</Copyright>
    <DelaySign>false</DelaySign>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <Optimize>true</Optimize>
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

</Project>
